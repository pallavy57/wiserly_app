pipeline {
   environment {
    project = 'wip-01'
    appName = 'wiserly-inventory-planner'
    registeryName = 'wipregistry.azurecr.io'
    imageVersion = 'development'
    feSvcName = 'wip-as-a-service'
    AZURE_SUBSCRIPTION_ID='35c42bfc-f8d8-48e8-ad03-4f9eb1379f05'
    AZURE_TENANT_ID='412abcf4-3edc-4720-b50e-22484b38856b'
    RESOURCE_GROUP='jenkins-vm'
    namespace="wiserly-inventory-planner"
  }
    agent any
    stages {
        stage('Get latest version of code') {
        steps{
        checkout scm
        }
       }
        stage('Build') {
            steps {
                sh("docker build -t ${registeryName}/${appName}:${BUILD_NUMBER} .")
                sh 'docker image ls'
            }
        }
        stage('Run') {
          
            steps {
                withCredentials([usernamePassword(credentialsId: 'ACR',passwordVariable: 'password', usernameVariable: 'username')]) {
                            sh 'docker login -u ${username} -p ${password} wipregistry.azurecr.io'
                            sh "docker image push ${registeryName}/${appName}:${BUILD_NUMBER}"
                }
                
            }
        }

         stage('Deploy Application') {
    steps{
     
              //Roll out to Dev Environment
                   // Create namespace if it doesn't exist
                   sh("kubectl get ns ${namespace} || kubectl create ns ${namespace}")
           //Update the imagetag to the latest version
                   sh("sed -i.bak 's#`${registeryName}/${appName}`:${imageVersion}#${BUILD_NUMBER}#' ./k8s/development/*.yaml")
                   //Create or update resources
                   sh("kubectl --namespace=${namespace} apply -f k8s/development/deployment.yaml")
                   sh("kubectl --namespace=${namespace} apply -f k8s/development/service.yaml")
           //Grab the external Ip address of the service
                   sh("echo http://`kubectl --namespace=${namespace} get service/${feSvcName} --output=json | jq -r '.status.loadBalancer.ingress[0].ip'` > ${feSvcName}")
                  
         
    } 
  }
    }
}


pipeline {
     environment {
   
   project = 'wip-01'
   appName = 'wiserly-inventory-planner'
   registeryName = 'wip9090.azurecr.io'
   imageVersion = 'development'
   feSvcName = 'wip-as-a-service'
  }

    agent any
    stages {

         //Checkout Code from Git
  stage('Get latest version of code') {
        steps{
        checkout scm
      }
  }

        stage('Build UI Docker Image') {
            steps {
                container('docker') {
                      sh 'dockerd & > /dev/null'
                      sleep(time: 10, unit: "SECONDS")
                      sh("docker build -t ${registeryName}/${appName} .")
                      sh 'docker image ls' 
                }
            }
        }

      //Stage 2 : Push the image to docker registry
  stage('Push image to registry') {
       steps {
                container('docker') {
      sh "docker push ${registeryName}/${appName}"
                }}
  }
  
  //Stage 3 : Deploy Application
  stage('Deploy Application') {
    steps{
       container('kubectl') { 
              //Roll out to Dev Environment
                   // Create namespace if it doesn't exist
                   sh("kubectl get ns ${namespace} || kubectl create ns ${namespace}")
           //Update the imagetag to the latest version
                   sh("sed -i.bak 's#`${registeryName}/${appName}`:${imageVersion}#${BUILD_NUMBER}#' ./k8s/development/*.yaml")
                   //Create or update resources
                   sh("kubectl --namespace=${namespace} apply -f k8s/development/deployment.yaml")
                   sh("kubectl --namespace=${namespace} apply -f k8s/development/service.yaml")
           //Grab the external Ip address of the service
                   sh("echo http://`kubectl --namespace=${namespace} get service/${feSvcName} --output=json | jq -r '.status.loadBalancer.ingress[0].ip'` > ${feSvcName}")
                  
           
        
  }    
    }
  }
    }
}